// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: rollingmill_model.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace DynStacking.RollingMill.DataModel {

  /// <summary>Holder for reflection information generated from rollingmill_model.proto</summary>
  public static partial class RollingmillModelReflection {

    #region Descriptor
    /// <summary>File descriptor for rollingmill_model.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static RollingmillModelReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Chdyb2xsaW5nbWlsbF9tb2RlbC5wcm90bxIhRHluU3RhY2tpbmcuUm9sbGlu",
            "Z01pbGwuRGF0YU1vZGVsIpkBCgdBcnJpdmFsEg8KB1ZlaGljbGUYASABKAUS",
            "NgoETG9hZBgCIAEoCzIoLkR5blN0YWNraW5nLlJvbGxpbmdNaWxsLkRhdGFN",
            "b2RlbC5TdGFjaxJFCg9BcnJpdmFsRXN0aW1hdGUYAyABKAsyLC5EeW5TdGFj",
            "a2luZy5Sb2xsaW5nTWlsbC5EYXRhTW9kZWwuVGltZVN0YW1wIsMBCgVCbG9j",
            "axIKCgJJZBgBIAEoBRIQCghTZXF1ZW5jZRgCIAEoBRI6CgRUeXBlGAMgASgO",
            "MiwuRHluU3RhY2tpbmcuUm9sbGluZ01pbGwuRGF0YU1vZGVsLk1pbGxUeXBl",
            "cxIRCglQcm9ncmFtSWQYBCABKAUSPQoHQXJyaXZlZBgFIAEoCzIsLkR5blN0",
            "YWNraW5nLlJvbGxpbmdNaWxsLkRhdGFNb2RlbC5UaW1lU3RhbXASDgoGUm9s",
            "bGVkGAYgASgIIscBCgVDcmFuZRIKCgJJZBgBIAEoBRI2CgRMb2FkGAIgASgL",
            "MiguRHluU3RhY2tpbmcuUm9sbGluZ01pbGwuRGF0YU1vZGVsLlN0YWNrEhYK",
            "DkdpcmRlclBvc2l0aW9uGAMgASgBEhIKCkhvaXN0TGV2ZWwYBCABKAESFQoN",
            "Q3JhbmVDYXBhY2l0eRgFIAEoBRINCgVXaWR0aBgGIAEoARITCgtNaW5Qb3Np",
            "dGlvbhgHIAEoARITCgtNYXhQb3NpdGlvbhgIIAEoASLWAgoJQ3JhbmVNb3Zl",
            "EgoKAklkGAEgASgFEjkKBFR5cGUYAiABKA4yKy5EeW5TdGFja2luZy5Sb2xs",
            "aW5nTWlsbC5EYXRhTW9kZWwuTW92ZVR5cGUSGAoQUGlja3VwTG9jYXRpb25J",
            "ZBgDIAEoBRIZChFEcm9wb2ZmTG9jYXRpb25JZBgEIAEoBRIOCgZBbW91bnQY",
            "ByABKAUSQQoLUmVsZWFzZVRpbWUYCCABKAsyLC5EeW5TdGFja2luZy5Sb2xs",
            "aW5nTWlsbC5EYXRhTW9kZWwuVGltZVN0YW1wEj0KB0R1ZURhdGUYCSABKAsy",
            "LC5EeW5TdGFja2luZy5Sb2xsaW5nTWlsbC5EYXRhTW9kZWwuVGltZVN0YW1w",
            "EhcKD1JlcXVpcmVkQ3JhbmVJZBgKIAEoBRIiChZQcm90b2J1ZlByZWRlY2Vz",
            "c29ySWRzGAsgAygFQgIQACJxCg1DcmFuZVNjaGVkdWxlEhIKClNjaGVkdWxl",
            "TnIYASABKAUSTAoKQWN0aXZpdGllcxgCIAMoCzI4LkR5blN0YWNraW5nLlJv",
            "bGxpbmdNaWxsLkRhdGFNb2RlbC5DcmFuZVNjaGVkdWxlQWN0aXZpdHkiSgoV",
            "Q3JhbmVTY2hlZHVsZUFjdGl2aXR5Eg4KBk1vdmVJZBgBIAEoBRIPCgdDcmFu",
            "ZUlkGAIgASgFEhAKCFByaW9yaXR5GAMgASgFIvcBCghMb2NhdGlvbhIKCgJJ",
            "ZBgBIAEoBRIWCg5HaXJkZXJQb3NpdGlvbhgCIAEoARIRCglNYXhIZWlnaHQY",
            "AyABKAUSNwoFU3RhY2sYBCABKAsyKC5EeW5TdGFja2luZy5Sb2xsaW5nTWls",
            "bC5EYXRhTW9kZWwuU3RhY2sSOwoEVHlwZRgFIAEoDjItLkR5blN0YWNraW5n",
            "LlJvbGxpbmdNaWxsLkRhdGFNb2RlbC5TdGFja1R5cGVzEj4KCE1pbGxUeXBl",
            "GAYgASgOMiwuRHluU3RhY2tpbmcuUm9sbGluZ01pbGwuRGF0YU1vZGVsLk1p",
            "bGxUeXBlcyKDAQoLTW92ZVJlcXVlc3QSCgoCSWQYASABKAUSGAoQVGFyZ2V0",
            "TG9jYXRpb25JZBgCIAEoBRIPCgdCbG9ja0lkGAMgASgFEj0KB0R1ZURhdGUY",
            "BCABKAsyLC5EeW5TdGFja2luZy5Sb2xsaW5nTWlsbC5EYXRhTW9kZWwuVGlt",
            "ZVN0YW1wIq4DCgtQZXJmb3JtYW5jZRIaChJDcmFuZU1hbmlwdWxhdGlvbnMY",
            "ASABKAUSGAoQU2VydmljZUxldmVsTWVhbhgCIAEoARIUCgxMZWFkVGltZU1l",
            "YW4YAyABKAESFwoPRGVsaXZlcmVkQmxvY2tzGAQgASgFEhkKEVRvdGFsQmxv",
            "Y2tzT25UaW1lGAUgASgFEhUKDVRhcmRpbmVzc01lYW4YBiABKAESJAocU2h1",
            "ZmZsZUJ1ZmZlclV0aWxpemF0aW9uTWVhbhgHIAEoARIjChtTb3J0ZWRCdWZm",
            "ZXJVdGlsaXphdGlvbk1lYW4YCCABKAESIwobU2h1ZmZsZUNyYW5lVXRpbGl6",
            "YXRpb25NZWFuGAkgASgBEiQKHEhhbmRvdmVyQ3JhbmVVdGlsaXphdGlvbk1l",
            "YW4YCiABKAESHAoUTWlsbEFVdGlsaXphdGlvbk1lYW4YCyABKAESHAoUTWls",
            "bEJVdGlsaXphdGlvbk1lYW4YDCABKAESHQoVUm9sbGluZ1Byb2dyYW1NZXNz",
            "dXBzGA0gASgFEhcKD0Jsb2NrZWRNaWxsVGltZRgOIAEoASJkChFQbGFubmVk",
            "Q3JhbmVNb3ZlcxISCgpTZXF1ZW5jZU5yGAEgASgFEjsKBU1vdmVzGAIgAygL",
            "MiwuRHluU3RhY2tpbmcuUm9sbGluZ01pbGwuRGF0YU1vZGVsLkNyYW5lTW92",
            "ZSJGCgVTdGFjaxI9CgtCb3R0b21Ub1RvcBgBIAMoCzIoLkR5blN0YWNraW5n",
            "LlJvbGxpbmdNaWxsLkRhdGFNb2RlbC5CbG9jayIhCglUaW1lU3RhbXASFAoM",
            "TWlsbGlTZWNvbmRzGAEgASgDImkKDVVuY2VydGFpbnRpZXMSHAoQQXJyaXZh",
            "bEludGVydmFscxgBIAMoAUICEAASGgoOQ3JhbmVNb3ZlVGltZXMYAiADKAFC",
            "AhAAEh4KEk1pbGxCbG9ja0ludGVydmFscxgDIAMoAUICEAAikgYKBVdvcmxk",
            "EjkKA05vdxgBIAEoCzIsLkR5blN0YWNraW5nLlJvbGxpbmdNaWxsLkRhdGFN",
            "b2RlbC5UaW1lU3RhbXASDgoGSGVpZ2h0GAIgASgFEg0KBVdpZHRoGAMgASgB",
            "Ej4KCUxvY2F0aW9ucxgEIAMoCzIrLkR5blN0YWNraW5nLlJvbGxpbmdNaWxs",
            "LkRhdGFNb2RlbC5Mb2NhdGlvbhJCChBCbG9ja3NBdFNsYWJZYXJkGAUgAygL",
            "MiguRHluU3RhY2tpbmcuUm9sbGluZ01pbGwuRGF0YU1vZGVsLkJsb2NrEkgK",
            "FEFycml2YWxzRnJvbVNsYWJZYXJkGAYgAygLMiouRHluU3RhY2tpbmcuUm9s",
            "bGluZ01pbGwuRGF0YU1vZGVsLkFycml2YWwSSAoKQ3JhbmVNb3ZlcxgHIAEo",
            "CzI0LkR5blN0YWNraW5nLlJvbGxpbmdNaWxsLkRhdGFNb2RlbC5QbGFubmVk",
            "Q3JhbmVNb3ZlcxJECgxNb3ZlUmVxdWVzdHMYCCADKAsyLi5EeW5TdGFja2lu",
            "Zy5Sb2xsaW5nTWlsbC5EYXRhTW9kZWwuTW92ZVJlcXVlc3QSRwoNQ3JhbmVT",
            "Y2hlZHVsZRgJIAEoCzIwLkR5blN0YWNraW5nLlJvbGxpbmdNaWxsLkRhdGFN",
            "b2RlbC5DcmFuZVNjaGVkdWxlEj4KDFNodWZmbGVDcmFuZRgKIAEoCzIoLkR5",
            "blN0YWNraW5nLlJvbGxpbmdNaWxsLkRhdGFNb2RlbC5DcmFuZRI/Cg1IYW5k",
            "b3ZlckNyYW5lGAsgASgLMiguRHluU3RhY2tpbmcuUm9sbGluZ01pbGwuRGF0",
            "YU1vZGVsLkNyYW5lEjwKBEtQSXMYDCABKAsyLi5EeW5TdGFja2luZy5Sb2xs",
            "aW5nTWlsbC5EYXRhTW9kZWwuUGVyZm9ybWFuY2USSQoPT2JzZXJ2YXRpb25E",
            "YXRhGA0gASgLMjAuRHluU3RhY2tpbmcuUm9sbGluZ01pbGwuRGF0YU1vZGVs",
            "LlVuY2VydGFpbnRpZXMqGQoJTWlsbFR5cGVzEgUKAUEQABIFCgFCEAEqMgoI",
            "TW92ZVR5cGUSEAoMTW92ZVRvUGlja3VwEAASFAoQUGlja3VwQW5kRHJvcG9m",
            "ZhABKlYKClN0YWNrVHlwZXMSEAoMQXJyaXZhbFN0YWNrEAASEQoNU2h1ZmZs",
            "ZUJ1ZmZlchABEhAKDFNvcnRlZEJ1ZmZlchACEhEKDUhhbmRvdmVyU3RhY2sQ",
            "A2IGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::DynStacking.RollingMill.DataModel.MillTypes), typeof(global::DynStacking.RollingMill.DataModel.MoveType), typeof(global::DynStacking.RollingMill.DataModel.StackTypes), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::DynStacking.RollingMill.DataModel.Arrival), global::DynStacking.RollingMill.DataModel.Arrival.Parser, new[]{ "Vehicle", "Load", "ArrivalEstimate" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::DynStacking.RollingMill.DataModel.Block), global::DynStacking.RollingMill.DataModel.Block.Parser, new[]{ "Id", "Sequence", "Type", "ProgramId", "Arrived", "Rolled" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::DynStacking.RollingMill.DataModel.Crane), global::DynStacking.RollingMill.DataModel.Crane.Parser, new[]{ "Id", "Load", "GirderPosition", "HoistLevel", "CraneCapacity", "Width", "MinPosition", "MaxPosition" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::DynStacking.RollingMill.DataModel.CraneMove), global::DynStacking.RollingMill.DataModel.CraneMove.Parser, new[]{ "Id", "Type", "PickupLocationId", "DropoffLocationId", "Amount", "ReleaseTime", "DueDate", "RequiredCraneId", "ProtobufPredecessorIds" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::DynStacking.RollingMill.DataModel.CraneSchedule), global::DynStacking.RollingMill.DataModel.CraneSchedule.Parser, new[]{ "ScheduleNr", "Activities" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::DynStacking.RollingMill.DataModel.CraneScheduleActivity), global::DynStacking.RollingMill.DataModel.CraneScheduleActivity.Parser, new[]{ "MoveId", "CraneId", "Priority" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::DynStacking.RollingMill.DataModel.Location), global::DynStacking.RollingMill.DataModel.Location.Parser, new[]{ "Id", "GirderPosition", "MaxHeight", "Stack", "Type", "MillType" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::DynStacking.RollingMill.DataModel.MoveRequest), global::DynStacking.RollingMill.DataModel.MoveRequest.Parser, new[]{ "Id", "TargetLocationId", "BlockId", "DueDate" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::DynStacking.RollingMill.DataModel.Performance), global::DynStacking.RollingMill.DataModel.Performance.Parser, new[]{ "CraneManipulations", "ServiceLevelMean", "LeadTimeMean", "DeliveredBlocks", "TotalBlocksOnTime", "TardinessMean", "ShuffleBufferUtilizationMean", "SortedBufferUtilizationMean", "ShuffleCraneUtilizationMean", "HandoverCraneUtilizationMean", "MillAUtilizationMean", "MillBUtilizationMean", "RollingProgramMessups", "BlockedMillTime" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::DynStacking.RollingMill.DataModel.PlannedCraneMoves), global::DynStacking.RollingMill.DataModel.PlannedCraneMoves.Parser, new[]{ "SequenceNr", "Moves" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::DynStacking.RollingMill.DataModel.Stack), global::DynStacking.RollingMill.DataModel.Stack.Parser, new[]{ "BottomToTop" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::DynStacking.RollingMill.DataModel.TimeStamp), global::DynStacking.RollingMill.DataModel.TimeStamp.Parser, new[]{ "MilliSeconds" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::DynStacking.RollingMill.DataModel.Uncertainties), global::DynStacking.RollingMill.DataModel.Uncertainties.Parser, new[]{ "ArrivalIntervals", "CraneMoveTimes", "MillBlockIntervals" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::DynStacking.RollingMill.DataModel.World), global::DynStacking.RollingMill.DataModel.World.Parser, new[]{ "Now", "Height", "Width", "Locations", "BlocksAtSlabYard", "ArrivalsFromSlabYard", "CraneMoves", "MoveRequests", "CraneSchedule", "ShuffleCrane", "HandoverCrane", "KPIs", "ObservationData" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum MillTypes {
    [pbr::OriginalName("A")] A = 0,
    [pbr::OriginalName("B")] B = 1,
  }

  public enum MoveType {
    [pbr::OriginalName("MoveToPickup")] MoveToPickup = 0,
    [pbr::OriginalName("PickupAndDropoff")] PickupAndDropoff = 1,
  }

  public enum StackTypes {
    [pbr::OriginalName("ArrivalStack")] ArrivalStack = 0,
    [pbr::OriginalName("ShuffleBuffer")] ShuffleBuffer = 1,
    [pbr::OriginalName("SortedBuffer")] SortedBuffer = 2,
    [pbr::OriginalName("HandoverStack")] HandoverStack = 3,
  }

  #endregion

  #region Messages
  public sealed partial class Arrival : pb::IMessage<Arrival>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Arrival> _parser = new pb::MessageParser<Arrival>(() => new Arrival());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Arrival> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::DynStacking.RollingMill.DataModel.RollingmillModelReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Arrival() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Arrival(Arrival other) : this() {
      vehicle_ = other.vehicle_;
      load_ = other.load_ != null ? other.load_.Clone() : null;
      arrivalEstimate_ = other.arrivalEstimate_ != null ? other.arrivalEstimate_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Arrival Clone() {
      return new Arrival(this);
    }

    /// <summary>Field number for the "Vehicle" field.</summary>
    public const int VehicleFieldNumber = 1;
    private int vehicle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Vehicle {
      get { return vehicle_; }
      set {
        vehicle_ = value;
      }
    }

    /// <summary>Field number for the "Load" field.</summary>
    public const int LoadFieldNumber = 2;
    private global::DynStacking.RollingMill.DataModel.Stack load_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::DynStacking.RollingMill.DataModel.Stack Load {
      get { return load_; }
      set {
        load_ = value;
      }
    }

    /// <summary>Field number for the "ArrivalEstimate" field.</summary>
    public const int ArrivalEstimateFieldNumber = 3;
    private global::DynStacking.RollingMill.DataModel.TimeStamp arrivalEstimate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::DynStacking.RollingMill.DataModel.TimeStamp ArrivalEstimate {
      get { return arrivalEstimate_; }
      set {
        arrivalEstimate_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Arrival);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Arrival other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Vehicle != other.Vehicle) return false;
      if (!object.Equals(Load, other.Load)) return false;
      if (!object.Equals(ArrivalEstimate, other.ArrivalEstimate)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Vehicle != 0) hash ^= Vehicle.GetHashCode();
      if (load_ != null) hash ^= Load.GetHashCode();
      if (arrivalEstimate_ != null) hash ^= ArrivalEstimate.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Vehicle != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Vehicle);
      }
      if (load_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Load);
      }
      if (arrivalEstimate_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(ArrivalEstimate);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Vehicle != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Vehicle);
      }
      if (load_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Load);
      }
      if (arrivalEstimate_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(ArrivalEstimate);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Vehicle != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Vehicle);
      }
      if (load_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Load);
      }
      if (arrivalEstimate_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ArrivalEstimate);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Arrival other) {
      if (other == null) {
        return;
      }
      if (other.Vehicle != 0) {
        Vehicle = other.Vehicle;
      }
      if (other.load_ != null) {
        if (load_ == null) {
          Load = new global::DynStacking.RollingMill.DataModel.Stack();
        }
        Load.MergeFrom(other.Load);
      }
      if (other.arrivalEstimate_ != null) {
        if (arrivalEstimate_ == null) {
          ArrivalEstimate = new global::DynStacking.RollingMill.DataModel.TimeStamp();
        }
        ArrivalEstimate.MergeFrom(other.ArrivalEstimate);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Vehicle = input.ReadInt32();
            break;
          }
          case 18: {
            if (load_ == null) {
              Load = new global::DynStacking.RollingMill.DataModel.Stack();
            }
            input.ReadMessage(Load);
            break;
          }
          case 26: {
            if (arrivalEstimate_ == null) {
              ArrivalEstimate = new global::DynStacking.RollingMill.DataModel.TimeStamp();
            }
            input.ReadMessage(ArrivalEstimate);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Vehicle = input.ReadInt32();
            break;
          }
          case 18: {
            if (load_ == null) {
              Load = new global::DynStacking.RollingMill.DataModel.Stack();
            }
            input.ReadMessage(Load);
            break;
          }
          case 26: {
            if (arrivalEstimate_ == null) {
              ArrivalEstimate = new global::DynStacking.RollingMill.DataModel.TimeStamp();
            }
            input.ReadMessage(ArrivalEstimate);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Block : pb::IMessage<Block>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Block> _parser = new pb::MessageParser<Block>(() => new Block());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Block> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::DynStacking.RollingMill.DataModel.RollingmillModelReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Block() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Block(Block other) : this() {
      id_ = other.id_;
      sequence_ = other.sequence_;
      type_ = other.type_;
      programId_ = other.programId_;
      arrived_ = other.arrived_ != null ? other.arrived_.Clone() : null;
      rolled_ = other.rolled_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Block Clone() {
      return new Block(this);
    }

    /// <summary>Field number for the "Id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "Sequence" field.</summary>
    public const int SequenceFieldNumber = 2;
    private int sequence_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Sequence {
      get { return sequence_; }
      set {
        sequence_ = value;
      }
    }

    /// <summary>Field number for the "Type" field.</summary>
    public const int TypeFieldNumber = 3;
    private global::DynStacking.RollingMill.DataModel.MillTypes type_ = global::DynStacking.RollingMill.DataModel.MillTypes.A;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::DynStacking.RollingMill.DataModel.MillTypes Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "ProgramId" field.</summary>
    public const int ProgramIdFieldNumber = 4;
    private int programId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ProgramId {
      get { return programId_; }
      set {
        programId_ = value;
      }
    }

    /// <summary>Field number for the "Arrived" field.</summary>
    public const int ArrivedFieldNumber = 5;
    private global::DynStacking.RollingMill.DataModel.TimeStamp arrived_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::DynStacking.RollingMill.DataModel.TimeStamp Arrived {
      get { return arrived_; }
      set {
        arrived_ = value;
      }
    }

    /// <summary>Field number for the "Rolled" field.</summary>
    public const int RolledFieldNumber = 6;
    private bool rolled_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Rolled {
      get { return rolled_; }
      set {
        rolled_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Block);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Block other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Sequence != other.Sequence) return false;
      if (Type != other.Type) return false;
      if (ProgramId != other.ProgramId) return false;
      if (!object.Equals(Arrived, other.Arrived)) return false;
      if (Rolled != other.Rolled) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Sequence != 0) hash ^= Sequence.GetHashCode();
      if (Type != global::DynStacking.RollingMill.DataModel.MillTypes.A) hash ^= Type.GetHashCode();
      if (ProgramId != 0) hash ^= ProgramId.GetHashCode();
      if (arrived_ != null) hash ^= Arrived.GetHashCode();
      if (Rolled != false) hash ^= Rolled.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Sequence != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Sequence);
      }
      if (Type != global::DynStacking.RollingMill.DataModel.MillTypes.A) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Type);
      }
      if (ProgramId != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(ProgramId);
      }
      if (arrived_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Arrived);
      }
      if (Rolled != false) {
        output.WriteRawTag(48);
        output.WriteBool(Rolled);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Sequence != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Sequence);
      }
      if (Type != global::DynStacking.RollingMill.DataModel.MillTypes.A) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Type);
      }
      if (ProgramId != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(ProgramId);
      }
      if (arrived_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Arrived);
      }
      if (Rolled != false) {
        output.WriteRawTag(48);
        output.WriteBool(Rolled);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (Sequence != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Sequence);
      }
      if (Type != global::DynStacking.RollingMill.DataModel.MillTypes.A) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (ProgramId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ProgramId);
      }
      if (arrived_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Arrived);
      }
      if (Rolled != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Block other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Sequence != 0) {
        Sequence = other.Sequence;
      }
      if (other.Type != global::DynStacking.RollingMill.DataModel.MillTypes.A) {
        Type = other.Type;
      }
      if (other.ProgramId != 0) {
        ProgramId = other.ProgramId;
      }
      if (other.arrived_ != null) {
        if (arrived_ == null) {
          Arrived = new global::DynStacking.RollingMill.DataModel.TimeStamp();
        }
        Arrived.MergeFrom(other.Arrived);
      }
      if (other.Rolled != false) {
        Rolled = other.Rolled;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            Sequence = input.ReadInt32();
            break;
          }
          case 24: {
            Type = (global::DynStacking.RollingMill.DataModel.MillTypes) input.ReadEnum();
            break;
          }
          case 32: {
            ProgramId = input.ReadInt32();
            break;
          }
          case 42: {
            if (arrived_ == null) {
              Arrived = new global::DynStacking.RollingMill.DataModel.TimeStamp();
            }
            input.ReadMessage(Arrived);
            break;
          }
          case 48: {
            Rolled = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            Sequence = input.ReadInt32();
            break;
          }
          case 24: {
            Type = (global::DynStacking.RollingMill.DataModel.MillTypes) input.ReadEnum();
            break;
          }
          case 32: {
            ProgramId = input.ReadInt32();
            break;
          }
          case 42: {
            if (arrived_ == null) {
              Arrived = new global::DynStacking.RollingMill.DataModel.TimeStamp();
            }
            input.ReadMessage(Arrived);
            break;
          }
          case 48: {
            Rolled = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Crane : pb::IMessage<Crane>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Crane> _parser = new pb::MessageParser<Crane>(() => new Crane());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Crane> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::DynStacking.RollingMill.DataModel.RollingmillModelReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Crane() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Crane(Crane other) : this() {
      id_ = other.id_;
      load_ = other.load_ != null ? other.load_.Clone() : null;
      girderPosition_ = other.girderPosition_;
      hoistLevel_ = other.hoistLevel_;
      craneCapacity_ = other.craneCapacity_;
      width_ = other.width_;
      minPosition_ = other.minPosition_;
      maxPosition_ = other.maxPosition_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Crane Clone() {
      return new Crane(this);
    }

    /// <summary>Field number for the "Id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "Load" field.</summary>
    public const int LoadFieldNumber = 2;
    private global::DynStacking.RollingMill.DataModel.Stack load_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::DynStacking.RollingMill.DataModel.Stack Load {
      get { return load_; }
      set {
        load_ = value;
      }
    }

    /// <summary>Field number for the "GirderPosition" field.</summary>
    public const int GirderPositionFieldNumber = 3;
    private double girderPosition_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double GirderPosition {
      get { return girderPosition_; }
      set {
        girderPosition_ = value;
      }
    }

    /// <summary>Field number for the "HoistLevel" field.</summary>
    public const int HoistLevelFieldNumber = 4;
    private double hoistLevel_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double HoistLevel {
      get { return hoistLevel_; }
      set {
        hoistLevel_ = value;
      }
    }

    /// <summary>Field number for the "CraneCapacity" field.</summary>
    public const int CraneCapacityFieldNumber = 5;
    private int craneCapacity_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CraneCapacity {
      get { return craneCapacity_; }
      set {
        craneCapacity_ = value;
      }
    }

    /// <summary>Field number for the "Width" field.</summary>
    public const int WidthFieldNumber = 6;
    private double width_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Width {
      get { return width_; }
      set {
        width_ = value;
      }
    }

    /// <summary>Field number for the "MinPosition" field.</summary>
    public const int MinPositionFieldNumber = 7;
    private double minPosition_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double MinPosition {
      get { return minPosition_; }
      set {
        minPosition_ = value;
      }
    }

    /// <summary>Field number for the "MaxPosition" field.</summary>
    public const int MaxPositionFieldNumber = 8;
    private double maxPosition_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double MaxPosition {
      get { return maxPosition_; }
      set {
        maxPosition_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Crane);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Crane other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (!object.Equals(Load, other.Load)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(GirderPosition, other.GirderPosition)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(HoistLevel, other.HoistLevel)) return false;
      if (CraneCapacity != other.CraneCapacity) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Width, other.Width)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(MinPosition, other.MinPosition)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(MaxPosition, other.MaxPosition)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (load_ != null) hash ^= Load.GetHashCode();
      if (GirderPosition != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(GirderPosition);
      if (HoistLevel != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(HoistLevel);
      if (CraneCapacity != 0) hash ^= CraneCapacity.GetHashCode();
      if (Width != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Width);
      if (MinPosition != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(MinPosition);
      if (MaxPosition != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(MaxPosition);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (load_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Load);
      }
      if (GirderPosition != 0D) {
        output.WriteRawTag(25);
        output.WriteDouble(GirderPosition);
      }
      if (HoistLevel != 0D) {
        output.WriteRawTag(33);
        output.WriteDouble(HoistLevel);
      }
      if (CraneCapacity != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(CraneCapacity);
      }
      if (Width != 0D) {
        output.WriteRawTag(49);
        output.WriteDouble(Width);
      }
      if (MinPosition != 0D) {
        output.WriteRawTag(57);
        output.WriteDouble(MinPosition);
      }
      if (MaxPosition != 0D) {
        output.WriteRawTag(65);
        output.WriteDouble(MaxPosition);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (load_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Load);
      }
      if (GirderPosition != 0D) {
        output.WriteRawTag(25);
        output.WriteDouble(GirderPosition);
      }
      if (HoistLevel != 0D) {
        output.WriteRawTag(33);
        output.WriteDouble(HoistLevel);
      }
      if (CraneCapacity != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(CraneCapacity);
      }
      if (Width != 0D) {
        output.WriteRawTag(49);
        output.WriteDouble(Width);
      }
      if (MinPosition != 0D) {
        output.WriteRawTag(57);
        output.WriteDouble(MinPosition);
      }
      if (MaxPosition != 0D) {
        output.WriteRawTag(65);
        output.WriteDouble(MaxPosition);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (load_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Load);
      }
      if (GirderPosition != 0D) {
        size += 1 + 8;
      }
      if (HoistLevel != 0D) {
        size += 1 + 8;
      }
      if (CraneCapacity != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CraneCapacity);
      }
      if (Width != 0D) {
        size += 1 + 8;
      }
      if (MinPosition != 0D) {
        size += 1 + 8;
      }
      if (MaxPosition != 0D) {
        size += 1 + 8;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Crane other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.load_ != null) {
        if (load_ == null) {
          Load = new global::DynStacking.RollingMill.DataModel.Stack();
        }
        Load.MergeFrom(other.Load);
      }
      if (other.GirderPosition != 0D) {
        GirderPosition = other.GirderPosition;
      }
      if (other.HoistLevel != 0D) {
        HoistLevel = other.HoistLevel;
      }
      if (other.CraneCapacity != 0) {
        CraneCapacity = other.CraneCapacity;
      }
      if (other.Width != 0D) {
        Width = other.Width;
      }
      if (other.MinPosition != 0D) {
        MinPosition = other.MinPosition;
      }
      if (other.MaxPosition != 0D) {
        MaxPosition = other.MaxPosition;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            if (load_ == null) {
              Load = new global::DynStacking.RollingMill.DataModel.Stack();
            }
            input.ReadMessage(Load);
            break;
          }
          case 25: {
            GirderPosition = input.ReadDouble();
            break;
          }
          case 33: {
            HoistLevel = input.ReadDouble();
            break;
          }
          case 40: {
            CraneCapacity = input.ReadInt32();
            break;
          }
          case 49: {
            Width = input.ReadDouble();
            break;
          }
          case 57: {
            MinPosition = input.ReadDouble();
            break;
          }
          case 65: {
            MaxPosition = input.ReadDouble();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            if (load_ == null) {
              Load = new global::DynStacking.RollingMill.DataModel.Stack();
            }
            input.ReadMessage(Load);
            break;
          }
          case 25: {
            GirderPosition = input.ReadDouble();
            break;
          }
          case 33: {
            HoistLevel = input.ReadDouble();
            break;
          }
          case 40: {
            CraneCapacity = input.ReadInt32();
            break;
          }
          case 49: {
            Width = input.ReadDouble();
            break;
          }
          case 57: {
            MinPosition = input.ReadDouble();
            break;
          }
          case 65: {
            MaxPosition = input.ReadDouble();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CraneMove : pb::IMessage<CraneMove>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CraneMove> _parser = new pb::MessageParser<CraneMove>(() => new CraneMove());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CraneMove> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::DynStacking.RollingMill.DataModel.RollingmillModelReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CraneMove() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CraneMove(CraneMove other) : this() {
      id_ = other.id_;
      type_ = other.type_;
      pickupLocationId_ = other.pickupLocationId_;
      dropoffLocationId_ = other.dropoffLocationId_;
      amount_ = other.amount_;
      releaseTime_ = other.releaseTime_ != null ? other.releaseTime_.Clone() : null;
      dueDate_ = other.dueDate_ != null ? other.dueDate_.Clone() : null;
      requiredCraneId_ = other.requiredCraneId_;
      protobufPredecessorIds_ = other.protobufPredecessorIds_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CraneMove Clone() {
      return new CraneMove(this);
    }

    /// <summary>Field number for the "Id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "Type" field.</summary>
    public const int TypeFieldNumber = 2;
    private global::DynStacking.RollingMill.DataModel.MoveType type_ = global::DynStacking.RollingMill.DataModel.MoveType.MoveToPickup;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::DynStacking.RollingMill.DataModel.MoveType Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "PickupLocationId" field.</summary>
    public const int PickupLocationIdFieldNumber = 3;
    private int pickupLocationId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PickupLocationId {
      get { return pickupLocationId_; }
      set {
        pickupLocationId_ = value;
      }
    }

    /// <summary>Field number for the "DropoffLocationId" field.</summary>
    public const int DropoffLocationIdFieldNumber = 4;
    private int dropoffLocationId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int DropoffLocationId {
      get { return dropoffLocationId_; }
      set {
        dropoffLocationId_ = value;
      }
    }

    /// <summary>Field number for the "Amount" field.</summary>
    public const int AmountFieldNumber = 7;
    private int amount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Amount {
      get { return amount_; }
      set {
        amount_ = value;
      }
    }

    /// <summary>Field number for the "ReleaseTime" field.</summary>
    public const int ReleaseTimeFieldNumber = 8;
    private global::DynStacking.RollingMill.DataModel.TimeStamp releaseTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::DynStacking.RollingMill.DataModel.TimeStamp ReleaseTime {
      get { return releaseTime_; }
      set {
        releaseTime_ = value;
      }
    }

    /// <summary>Field number for the "DueDate" field.</summary>
    public const int DueDateFieldNumber = 9;
    private global::DynStacking.RollingMill.DataModel.TimeStamp dueDate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::DynStacking.RollingMill.DataModel.TimeStamp DueDate {
      get { return dueDate_; }
      set {
        dueDate_ = value;
      }
    }

    /// <summary>Field number for the "RequiredCraneId" field.</summary>
    public const int RequiredCraneIdFieldNumber = 10;
    private int requiredCraneId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RequiredCraneId {
      get { return requiredCraneId_; }
      set {
        requiredCraneId_ = value;
      }
    }

    /// <summary>Field number for the "ProtobufPredecessorIds" field.</summary>
    public const int ProtobufPredecessorIdsFieldNumber = 11;
    private static readonly pb::FieldCodec<int> _repeated_protobufPredecessorIds_codec
        = pb::FieldCodec.ForInt32(88);
    private readonly pbc::RepeatedField<int> protobufPredecessorIds_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> ProtobufPredecessorIds {
      get { return protobufPredecessorIds_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CraneMove);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CraneMove other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Type != other.Type) return false;
      if (PickupLocationId != other.PickupLocationId) return false;
      if (DropoffLocationId != other.DropoffLocationId) return false;
      if (Amount != other.Amount) return false;
      if (!object.Equals(ReleaseTime, other.ReleaseTime)) return false;
      if (!object.Equals(DueDate, other.DueDate)) return false;
      if (RequiredCraneId != other.RequiredCraneId) return false;
      if(!protobufPredecessorIds_.Equals(other.protobufPredecessorIds_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Type != global::DynStacking.RollingMill.DataModel.MoveType.MoveToPickup) hash ^= Type.GetHashCode();
      if (PickupLocationId != 0) hash ^= PickupLocationId.GetHashCode();
      if (DropoffLocationId != 0) hash ^= DropoffLocationId.GetHashCode();
      if (Amount != 0) hash ^= Amount.GetHashCode();
      if (releaseTime_ != null) hash ^= ReleaseTime.GetHashCode();
      if (dueDate_ != null) hash ^= DueDate.GetHashCode();
      if (RequiredCraneId != 0) hash ^= RequiredCraneId.GetHashCode();
      hash ^= protobufPredecessorIds_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Type != global::DynStacking.RollingMill.DataModel.MoveType.MoveToPickup) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Type);
      }
      if (PickupLocationId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(PickupLocationId);
      }
      if (DropoffLocationId != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(DropoffLocationId);
      }
      if (Amount != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(Amount);
      }
      if (releaseTime_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(ReleaseTime);
      }
      if (dueDate_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(DueDate);
      }
      if (RequiredCraneId != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(RequiredCraneId);
      }
      protobufPredecessorIds_.WriteTo(output, _repeated_protobufPredecessorIds_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Type != global::DynStacking.RollingMill.DataModel.MoveType.MoveToPickup) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Type);
      }
      if (PickupLocationId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(PickupLocationId);
      }
      if (DropoffLocationId != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(DropoffLocationId);
      }
      if (Amount != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(Amount);
      }
      if (releaseTime_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(ReleaseTime);
      }
      if (dueDate_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(DueDate);
      }
      if (RequiredCraneId != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(RequiredCraneId);
      }
      protobufPredecessorIds_.WriteTo(ref output, _repeated_protobufPredecessorIds_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (Type != global::DynStacking.RollingMill.DataModel.MoveType.MoveToPickup) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (PickupLocationId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PickupLocationId);
      }
      if (DropoffLocationId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(DropoffLocationId);
      }
      if (Amount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Amount);
      }
      if (releaseTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ReleaseTime);
      }
      if (dueDate_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DueDate);
      }
      if (RequiredCraneId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RequiredCraneId);
      }
      size += protobufPredecessorIds_.CalculateSize(_repeated_protobufPredecessorIds_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CraneMove other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Type != global::DynStacking.RollingMill.DataModel.MoveType.MoveToPickup) {
        Type = other.Type;
      }
      if (other.PickupLocationId != 0) {
        PickupLocationId = other.PickupLocationId;
      }
      if (other.DropoffLocationId != 0) {
        DropoffLocationId = other.DropoffLocationId;
      }
      if (other.Amount != 0) {
        Amount = other.Amount;
      }
      if (other.releaseTime_ != null) {
        if (releaseTime_ == null) {
          ReleaseTime = new global::DynStacking.RollingMill.DataModel.TimeStamp();
        }
        ReleaseTime.MergeFrom(other.ReleaseTime);
      }
      if (other.dueDate_ != null) {
        if (dueDate_ == null) {
          DueDate = new global::DynStacking.RollingMill.DataModel.TimeStamp();
        }
        DueDate.MergeFrom(other.DueDate);
      }
      if (other.RequiredCraneId != 0) {
        RequiredCraneId = other.RequiredCraneId;
      }
      protobufPredecessorIds_.Add(other.protobufPredecessorIds_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            Type = (global::DynStacking.RollingMill.DataModel.MoveType) input.ReadEnum();
            break;
          }
          case 24: {
            PickupLocationId = input.ReadInt32();
            break;
          }
          case 32: {
            DropoffLocationId = input.ReadInt32();
            break;
          }
          case 56: {
            Amount = input.ReadInt32();
            break;
          }
          case 66: {
            if (releaseTime_ == null) {
              ReleaseTime = new global::DynStacking.RollingMill.DataModel.TimeStamp();
            }
            input.ReadMessage(ReleaseTime);
            break;
          }
          case 74: {
            if (dueDate_ == null) {
              DueDate = new global::DynStacking.RollingMill.DataModel.TimeStamp();
            }
            input.ReadMessage(DueDate);
            break;
          }
          case 80: {
            RequiredCraneId = input.ReadInt32();
            break;
          }
          case 90:
          case 88: {
            protobufPredecessorIds_.AddEntriesFrom(input, _repeated_protobufPredecessorIds_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            Type = (global::DynStacking.RollingMill.DataModel.MoveType) input.ReadEnum();
            break;
          }
          case 24: {
            PickupLocationId = input.ReadInt32();
            break;
          }
          case 32: {
            DropoffLocationId = input.ReadInt32();
            break;
          }
          case 56: {
            Amount = input.ReadInt32();
            break;
          }
          case 66: {
            if (releaseTime_ == null) {
              ReleaseTime = new global::DynStacking.RollingMill.DataModel.TimeStamp();
            }
            input.ReadMessage(ReleaseTime);
            break;
          }
          case 74: {
            if (dueDate_ == null) {
              DueDate = new global::DynStacking.RollingMill.DataModel.TimeStamp();
            }
            input.ReadMessage(DueDate);
            break;
          }
          case 80: {
            RequiredCraneId = input.ReadInt32();
            break;
          }
          case 90:
          case 88: {
            protobufPredecessorIds_.AddEntriesFrom(ref input, _repeated_protobufPredecessorIds_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CraneSchedule : pb::IMessage<CraneSchedule>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CraneSchedule> _parser = new pb::MessageParser<CraneSchedule>(() => new CraneSchedule());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CraneSchedule> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::DynStacking.RollingMill.DataModel.RollingmillModelReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CraneSchedule() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CraneSchedule(CraneSchedule other) : this() {
      scheduleNr_ = other.scheduleNr_;
      activities_ = other.activities_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CraneSchedule Clone() {
      return new CraneSchedule(this);
    }

    /// <summary>Field number for the "ScheduleNr" field.</summary>
    public const int ScheduleNrFieldNumber = 1;
    private int scheduleNr_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ScheduleNr {
      get { return scheduleNr_; }
      set {
        scheduleNr_ = value;
      }
    }

    /// <summary>Field number for the "Activities" field.</summary>
    public const int ActivitiesFieldNumber = 2;
    private static readonly pb::FieldCodec<global::DynStacking.RollingMill.DataModel.CraneScheduleActivity> _repeated_activities_codec
        = pb::FieldCodec.ForMessage(18, global::DynStacking.RollingMill.DataModel.CraneScheduleActivity.Parser);
    private readonly pbc::RepeatedField<global::DynStacking.RollingMill.DataModel.CraneScheduleActivity> activities_ = new pbc::RepeatedField<global::DynStacking.RollingMill.DataModel.CraneScheduleActivity>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::DynStacking.RollingMill.DataModel.CraneScheduleActivity> Activities {
      get { return activities_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CraneSchedule);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CraneSchedule other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ScheduleNr != other.ScheduleNr) return false;
      if(!activities_.Equals(other.activities_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ScheduleNr != 0) hash ^= ScheduleNr.GetHashCode();
      hash ^= activities_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ScheduleNr != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ScheduleNr);
      }
      activities_.WriteTo(output, _repeated_activities_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ScheduleNr != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ScheduleNr);
      }
      activities_.WriteTo(ref output, _repeated_activities_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ScheduleNr != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ScheduleNr);
      }
      size += activities_.CalculateSize(_repeated_activities_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CraneSchedule other) {
      if (other == null) {
        return;
      }
      if (other.ScheduleNr != 0) {
        ScheduleNr = other.ScheduleNr;
      }
      activities_.Add(other.activities_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ScheduleNr = input.ReadInt32();
            break;
          }
          case 18: {
            activities_.AddEntriesFrom(input, _repeated_activities_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ScheduleNr = input.ReadInt32();
            break;
          }
          case 18: {
            activities_.AddEntriesFrom(ref input, _repeated_activities_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CraneScheduleActivity : pb::IMessage<CraneScheduleActivity>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CraneScheduleActivity> _parser = new pb::MessageParser<CraneScheduleActivity>(() => new CraneScheduleActivity());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CraneScheduleActivity> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::DynStacking.RollingMill.DataModel.RollingmillModelReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CraneScheduleActivity() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CraneScheduleActivity(CraneScheduleActivity other) : this() {
      moveId_ = other.moveId_;
      craneId_ = other.craneId_;
      priority_ = other.priority_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CraneScheduleActivity Clone() {
      return new CraneScheduleActivity(this);
    }

    /// <summary>Field number for the "MoveId" field.</summary>
    public const int MoveIdFieldNumber = 1;
    private int moveId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MoveId {
      get { return moveId_; }
      set {
        moveId_ = value;
      }
    }

    /// <summary>Field number for the "CraneId" field.</summary>
    public const int CraneIdFieldNumber = 2;
    private int craneId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CraneId {
      get { return craneId_; }
      set {
        craneId_ = value;
      }
    }

    /// <summary>Field number for the "Priority" field.</summary>
    public const int PriorityFieldNumber = 3;
    private int priority_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Priority {
      get { return priority_; }
      set {
        priority_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CraneScheduleActivity);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CraneScheduleActivity other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MoveId != other.MoveId) return false;
      if (CraneId != other.CraneId) return false;
      if (Priority != other.Priority) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MoveId != 0) hash ^= MoveId.GetHashCode();
      if (CraneId != 0) hash ^= CraneId.GetHashCode();
      if (Priority != 0) hash ^= Priority.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (MoveId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(MoveId);
      }
      if (CraneId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(CraneId);
      }
      if (Priority != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Priority);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (MoveId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(MoveId);
      }
      if (CraneId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(CraneId);
      }
      if (Priority != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Priority);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MoveId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MoveId);
      }
      if (CraneId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CraneId);
      }
      if (Priority != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Priority);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CraneScheduleActivity other) {
      if (other == null) {
        return;
      }
      if (other.MoveId != 0) {
        MoveId = other.MoveId;
      }
      if (other.CraneId != 0) {
        CraneId = other.CraneId;
      }
      if (other.Priority != 0) {
        Priority = other.Priority;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            MoveId = input.ReadInt32();
            break;
          }
          case 16: {
            CraneId = input.ReadInt32();
            break;
          }
          case 24: {
            Priority = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            MoveId = input.ReadInt32();
            break;
          }
          case 16: {
            CraneId = input.ReadInt32();
            break;
          }
          case 24: {
            Priority = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Location : pb::IMessage<Location>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Location> _parser = new pb::MessageParser<Location>(() => new Location());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Location> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::DynStacking.RollingMill.DataModel.RollingmillModelReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Location() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Location(Location other) : this() {
      id_ = other.id_;
      girderPosition_ = other.girderPosition_;
      maxHeight_ = other.maxHeight_;
      stack_ = other.stack_ != null ? other.stack_.Clone() : null;
      type_ = other.type_;
      millType_ = other.millType_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Location Clone() {
      return new Location(this);
    }

    /// <summary>Field number for the "Id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "GirderPosition" field.</summary>
    public const int GirderPositionFieldNumber = 2;
    private double girderPosition_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double GirderPosition {
      get { return girderPosition_; }
      set {
        girderPosition_ = value;
      }
    }

    /// <summary>Field number for the "MaxHeight" field.</summary>
    public const int MaxHeightFieldNumber = 3;
    private int maxHeight_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MaxHeight {
      get { return maxHeight_; }
      set {
        maxHeight_ = value;
      }
    }

    /// <summary>Field number for the "Stack" field.</summary>
    public const int StackFieldNumber = 4;
    private global::DynStacking.RollingMill.DataModel.Stack stack_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::DynStacking.RollingMill.DataModel.Stack Stack {
      get { return stack_; }
      set {
        stack_ = value;
      }
    }

    /// <summary>Field number for the "Type" field.</summary>
    public const int TypeFieldNumber = 5;
    private global::DynStacking.RollingMill.DataModel.StackTypes type_ = global::DynStacking.RollingMill.DataModel.StackTypes.ArrivalStack;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::DynStacking.RollingMill.DataModel.StackTypes Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "MillType" field.</summary>
    public const int MillTypeFieldNumber = 6;
    private global::DynStacking.RollingMill.DataModel.MillTypes millType_ = global::DynStacking.RollingMill.DataModel.MillTypes.A;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::DynStacking.RollingMill.DataModel.MillTypes MillType {
      get { return millType_; }
      set {
        millType_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Location);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Location other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(GirderPosition, other.GirderPosition)) return false;
      if (MaxHeight != other.MaxHeight) return false;
      if (!object.Equals(Stack, other.Stack)) return false;
      if (Type != other.Type) return false;
      if (MillType != other.MillType) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (GirderPosition != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(GirderPosition);
      if (MaxHeight != 0) hash ^= MaxHeight.GetHashCode();
      if (stack_ != null) hash ^= Stack.GetHashCode();
      if (Type != global::DynStacking.RollingMill.DataModel.StackTypes.ArrivalStack) hash ^= Type.GetHashCode();
      if (MillType != global::DynStacking.RollingMill.DataModel.MillTypes.A) hash ^= MillType.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (GirderPosition != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(GirderPosition);
      }
      if (MaxHeight != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(MaxHeight);
      }
      if (stack_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Stack);
      }
      if (Type != global::DynStacking.RollingMill.DataModel.StackTypes.ArrivalStack) {
        output.WriteRawTag(40);
        output.WriteEnum((int) Type);
      }
      if (MillType != global::DynStacking.RollingMill.DataModel.MillTypes.A) {
        output.WriteRawTag(48);
        output.WriteEnum((int) MillType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (GirderPosition != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(GirderPosition);
      }
      if (MaxHeight != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(MaxHeight);
      }
      if (stack_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Stack);
      }
      if (Type != global::DynStacking.RollingMill.DataModel.StackTypes.ArrivalStack) {
        output.WriteRawTag(40);
        output.WriteEnum((int) Type);
      }
      if (MillType != global::DynStacking.RollingMill.DataModel.MillTypes.A) {
        output.WriteRawTag(48);
        output.WriteEnum((int) MillType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (GirderPosition != 0D) {
        size += 1 + 8;
      }
      if (MaxHeight != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MaxHeight);
      }
      if (stack_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Stack);
      }
      if (Type != global::DynStacking.RollingMill.DataModel.StackTypes.ArrivalStack) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (MillType != global::DynStacking.RollingMill.DataModel.MillTypes.A) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) MillType);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Location other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.GirderPosition != 0D) {
        GirderPosition = other.GirderPosition;
      }
      if (other.MaxHeight != 0) {
        MaxHeight = other.MaxHeight;
      }
      if (other.stack_ != null) {
        if (stack_ == null) {
          Stack = new global::DynStacking.RollingMill.DataModel.Stack();
        }
        Stack.MergeFrom(other.Stack);
      }
      if (other.Type != global::DynStacking.RollingMill.DataModel.StackTypes.ArrivalStack) {
        Type = other.Type;
      }
      if (other.MillType != global::DynStacking.RollingMill.DataModel.MillTypes.A) {
        MillType = other.MillType;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 17: {
            GirderPosition = input.ReadDouble();
            break;
          }
          case 24: {
            MaxHeight = input.ReadInt32();
            break;
          }
          case 34: {
            if (stack_ == null) {
              Stack = new global::DynStacking.RollingMill.DataModel.Stack();
            }
            input.ReadMessage(Stack);
            break;
          }
          case 40: {
            Type = (global::DynStacking.RollingMill.DataModel.StackTypes) input.ReadEnum();
            break;
          }
          case 48: {
            MillType = (global::DynStacking.RollingMill.DataModel.MillTypes) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 17: {
            GirderPosition = input.ReadDouble();
            break;
          }
          case 24: {
            MaxHeight = input.ReadInt32();
            break;
          }
          case 34: {
            if (stack_ == null) {
              Stack = new global::DynStacking.RollingMill.DataModel.Stack();
            }
            input.ReadMessage(Stack);
            break;
          }
          case 40: {
            Type = (global::DynStacking.RollingMill.DataModel.StackTypes) input.ReadEnum();
            break;
          }
          case 48: {
            MillType = (global::DynStacking.RollingMill.DataModel.MillTypes) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class MoveRequest : pb::IMessage<MoveRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MoveRequest> _parser = new pb::MessageParser<MoveRequest>(() => new MoveRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MoveRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::DynStacking.RollingMill.DataModel.RollingmillModelReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MoveRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MoveRequest(MoveRequest other) : this() {
      id_ = other.id_;
      targetLocationId_ = other.targetLocationId_;
      blockId_ = other.blockId_;
      dueDate_ = other.dueDate_ != null ? other.dueDate_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MoveRequest Clone() {
      return new MoveRequest(this);
    }

    /// <summary>Field number for the "Id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "TargetLocationId" field.</summary>
    public const int TargetLocationIdFieldNumber = 2;
    private int targetLocationId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TargetLocationId {
      get { return targetLocationId_; }
      set {
        targetLocationId_ = value;
      }
    }

    /// <summary>Field number for the "BlockId" field.</summary>
    public const int BlockIdFieldNumber = 3;
    private int blockId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BlockId {
      get { return blockId_; }
      set {
        blockId_ = value;
      }
    }

    /// <summary>Field number for the "DueDate" field.</summary>
    public const int DueDateFieldNumber = 4;
    private global::DynStacking.RollingMill.DataModel.TimeStamp dueDate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::DynStacking.RollingMill.DataModel.TimeStamp DueDate {
      get { return dueDate_; }
      set {
        dueDate_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MoveRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MoveRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (TargetLocationId != other.TargetLocationId) return false;
      if (BlockId != other.BlockId) return false;
      if (!object.Equals(DueDate, other.DueDate)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (TargetLocationId != 0) hash ^= TargetLocationId.GetHashCode();
      if (BlockId != 0) hash ^= BlockId.GetHashCode();
      if (dueDate_ != null) hash ^= DueDate.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (TargetLocationId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(TargetLocationId);
      }
      if (BlockId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(BlockId);
      }
      if (dueDate_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(DueDate);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (TargetLocationId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(TargetLocationId);
      }
      if (BlockId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(BlockId);
      }
      if (dueDate_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(DueDate);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (TargetLocationId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TargetLocationId);
      }
      if (BlockId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BlockId);
      }
      if (dueDate_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DueDate);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MoveRequest other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.TargetLocationId != 0) {
        TargetLocationId = other.TargetLocationId;
      }
      if (other.BlockId != 0) {
        BlockId = other.BlockId;
      }
      if (other.dueDate_ != null) {
        if (dueDate_ == null) {
          DueDate = new global::DynStacking.RollingMill.DataModel.TimeStamp();
        }
        DueDate.MergeFrom(other.DueDate);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            TargetLocationId = input.ReadInt32();
            break;
          }
          case 24: {
            BlockId = input.ReadInt32();
            break;
          }
          case 34: {
            if (dueDate_ == null) {
              DueDate = new global::DynStacking.RollingMill.DataModel.TimeStamp();
            }
            input.ReadMessage(DueDate);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            TargetLocationId = input.ReadInt32();
            break;
          }
          case 24: {
            BlockId = input.ReadInt32();
            break;
          }
          case 34: {
            if (dueDate_ == null) {
              DueDate = new global::DynStacking.RollingMill.DataModel.TimeStamp();
            }
            input.ReadMessage(DueDate);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Performance : pb::IMessage<Performance>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Performance> _parser = new pb::MessageParser<Performance>(() => new Performance());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Performance> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::DynStacking.RollingMill.DataModel.RollingmillModelReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Performance() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Performance(Performance other) : this() {
      craneManipulations_ = other.craneManipulations_;
      serviceLevelMean_ = other.serviceLevelMean_;
      leadTimeMean_ = other.leadTimeMean_;
      deliveredBlocks_ = other.deliveredBlocks_;
      totalBlocksOnTime_ = other.totalBlocksOnTime_;
      tardinessMean_ = other.tardinessMean_;
      shuffleBufferUtilizationMean_ = other.shuffleBufferUtilizationMean_;
      sortedBufferUtilizationMean_ = other.sortedBufferUtilizationMean_;
      shuffleCraneUtilizationMean_ = other.shuffleCraneUtilizationMean_;
      handoverCraneUtilizationMean_ = other.handoverCraneUtilizationMean_;
      millAUtilizationMean_ = other.millAUtilizationMean_;
      millBUtilizationMean_ = other.millBUtilizationMean_;
      rollingProgramMessups_ = other.rollingProgramMessups_;
      blockedMillTime_ = other.blockedMillTime_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Performance Clone() {
      return new Performance(this);
    }

    /// <summary>Field number for the "CraneManipulations" field.</summary>
    public const int CraneManipulationsFieldNumber = 1;
    private int craneManipulations_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CraneManipulations {
      get { return craneManipulations_; }
      set {
        craneManipulations_ = value;
      }
    }

    /// <summary>Field number for the "ServiceLevelMean" field.</summary>
    public const int ServiceLevelMeanFieldNumber = 2;
    private double serviceLevelMean_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double ServiceLevelMean {
      get { return serviceLevelMean_; }
      set {
        serviceLevelMean_ = value;
      }
    }

    /// <summary>Field number for the "LeadTimeMean" field.</summary>
    public const int LeadTimeMeanFieldNumber = 3;
    private double leadTimeMean_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double LeadTimeMean {
      get { return leadTimeMean_; }
      set {
        leadTimeMean_ = value;
      }
    }

    /// <summary>Field number for the "DeliveredBlocks" field.</summary>
    public const int DeliveredBlocksFieldNumber = 4;
    private int deliveredBlocks_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int DeliveredBlocks {
      get { return deliveredBlocks_; }
      set {
        deliveredBlocks_ = value;
      }
    }

    /// <summary>Field number for the "TotalBlocksOnTime" field.</summary>
    public const int TotalBlocksOnTimeFieldNumber = 5;
    private int totalBlocksOnTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TotalBlocksOnTime {
      get { return totalBlocksOnTime_; }
      set {
        totalBlocksOnTime_ = value;
      }
    }

    /// <summary>Field number for the "TardinessMean" field.</summary>
    public const int TardinessMeanFieldNumber = 6;
    private double tardinessMean_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double TardinessMean {
      get { return tardinessMean_; }
      set {
        tardinessMean_ = value;
      }
    }

    /// <summary>Field number for the "ShuffleBufferUtilizationMean" field.</summary>
    public const int ShuffleBufferUtilizationMeanFieldNumber = 7;
    private double shuffleBufferUtilizationMean_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double ShuffleBufferUtilizationMean {
      get { return shuffleBufferUtilizationMean_; }
      set {
        shuffleBufferUtilizationMean_ = value;
      }
    }

    /// <summary>Field number for the "SortedBufferUtilizationMean" field.</summary>
    public const int SortedBufferUtilizationMeanFieldNumber = 8;
    private double sortedBufferUtilizationMean_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double SortedBufferUtilizationMean {
      get { return sortedBufferUtilizationMean_; }
      set {
        sortedBufferUtilizationMean_ = value;
      }
    }

    /// <summary>Field number for the "ShuffleCraneUtilizationMean" field.</summary>
    public const int ShuffleCraneUtilizationMeanFieldNumber = 9;
    private double shuffleCraneUtilizationMean_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double ShuffleCraneUtilizationMean {
      get { return shuffleCraneUtilizationMean_; }
      set {
        shuffleCraneUtilizationMean_ = value;
      }
    }

    /// <summary>Field number for the "HandoverCraneUtilizationMean" field.</summary>
    public const int HandoverCraneUtilizationMeanFieldNumber = 10;
    private double handoverCraneUtilizationMean_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double HandoverCraneUtilizationMean {
      get { return handoverCraneUtilizationMean_; }
      set {
        handoverCraneUtilizationMean_ = value;
      }
    }

    /// <summary>Field number for the "MillAUtilizationMean" field.</summary>
    public const int MillAUtilizationMeanFieldNumber = 11;
    private double millAUtilizationMean_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double MillAUtilizationMean {
      get { return millAUtilizationMean_; }
      set {
        millAUtilizationMean_ = value;
      }
    }

    /// <summary>Field number for the "MillBUtilizationMean" field.</summary>
    public const int MillBUtilizationMeanFieldNumber = 12;
    private double millBUtilizationMean_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double MillBUtilizationMean {
      get { return millBUtilizationMean_; }
      set {
        millBUtilizationMean_ = value;
      }
    }

    /// <summary>Field number for the "RollingProgramMessups" field.</summary>
    public const int RollingProgramMessupsFieldNumber = 13;
    private int rollingProgramMessups_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RollingProgramMessups {
      get { return rollingProgramMessups_; }
      set {
        rollingProgramMessups_ = value;
      }
    }

    /// <summary>Field number for the "BlockedMillTime" field.</summary>
    public const int BlockedMillTimeFieldNumber = 14;
    private double blockedMillTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double BlockedMillTime {
      get { return blockedMillTime_; }
      set {
        blockedMillTime_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Performance);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Performance other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CraneManipulations != other.CraneManipulations) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(ServiceLevelMean, other.ServiceLevelMean)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(LeadTimeMean, other.LeadTimeMean)) return false;
      if (DeliveredBlocks != other.DeliveredBlocks) return false;
      if (TotalBlocksOnTime != other.TotalBlocksOnTime) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(TardinessMean, other.TardinessMean)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(ShuffleBufferUtilizationMean, other.ShuffleBufferUtilizationMean)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(SortedBufferUtilizationMean, other.SortedBufferUtilizationMean)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(ShuffleCraneUtilizationMean, other.ShuffleCraneUtilizationMean)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(HandoverCraneUtilizationMean, other.HandoverCraneUtilizationMean)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(MillAUtilizationMean, other.MillAUtilizationMean)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(MillBUtilizationMean, other.MillBUtilizationMean)) return false;
      if (RollingProgramMessups != other.RollingProgramMessups) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(BlockedMillTime, other.BlockedMillTime)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CraneManipulations != 0) hash ^= CraneManipulations.GetHashCode();
      if (ServiceLevelMean != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(ServiceLevelMean);
      if (LeadTimeMean != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(LeadTimeMean);
      if (DeliveredBlocks != 0) hash ^= DeliveredBlocks.GetHashCode();
      if (TotalBlocksOnTime != 0) hash ^= TotalBlocksOnTime.GetHashCode();
      if (TardinessMean != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(TardinessMean);
      if (ShuffleBufferUtilizationMean != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(ShuffleBufferUtilizationMean);
      if (SortedBufferUtilizationMean != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(SortedBufferUtilizationMean);
      if (ShuffleCraneUtilizationMean != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(ShuffleCraneUtilizationMean);
      if (HandoverCraneUtilizationMean != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(HandoverCraneUtilizationMean);
      if (MillAUtilizationMean != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(MillAUtilizationMean);
      if (MillBUtilizationMean != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(MillBUtilizationMean);
      if (RollingProgramMessups != 0) hash ^= RollingProgramMessups.GetHashCode();
      if (BlockedMillTime != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(BlockedMillTime);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (CraneManipulations != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(CraneManipulations);
      }
      if (ServiceLevelMean != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(ServiceLevelMean);
      }
      if (LeadTimeMean != 0D) {
        output.WriteRawTag(25);
        output.WriteDouble(LeadTimeMean);
      }
      if (DeliveredBlocks != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(DeliveredBlocks);
      }
      if (TotalBlocksOnTime != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(TotalBlocksOnTime);
      }
      if (TardinessMean != 0D) {
        output.WriteRawTag(49);
        output.WriteDouble(TardinessMean);
      }
      if (ShuffleBufferUtilizationMean != 0D) {
        output.WriteRawTag(57);
        output.WriteDouble(ShuffleBufferUtilizationMean);
      }
      if (SortedBufferUtilizationMean != 0D) {
        output.WriteRawTag(65);
        output.WriteDouble(SortedBufferUtilizationMean);
      }
      if (ShuffleCraneUtilizationMean != 0D) {
        output.WriteRawTag(73);
        output.WriteDouble(ShuffleCraneUtilizationMean);
      }
      if (HandoverCraneUtilizationMean != 0D) {
        output.WriteRawTag(81);
        output.WriteDouble(HandoverCraneUtilizationMean);
      }
      if (MillAUtilizationMean != 0D) {
        output.WriteRawTag(89);
        output.WriteDouble(MillAUtilizationMean);
      }
      if (MillBUtilizationMean != 0D) {
        output.WriteRawTag(97);
        output.WriteDouble(MillBUtilizationMean);
      }
      if (RollingProgramMessups != 0) {
        output.WriteRawTag(104);
        output.WriteInt32(RollingProgramMessups);
      }
      if (BlockedMillTime != 0D) {
        output.WriteRawTag(113);
        output.WriteDouble(BlockedMillTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (CraneManipulations != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(CraneManipulations);
      }
      if (ServiceLevelMean != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(ServiceLevelMean);
      }
      if (LeadTimeMean != 0D) {
        output.WriteRawTag(25);
        output.WriteDouble(LeadTimeMean);
      }
      if (DeliveredBlocks != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(DeliveredBlocks);
      }
      if (TotalBlocksOnTime != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(TotalBlocksOnTime);
      }
      if (TardinessMean != 0D) {
        output.WriteRawTag(49);
        output.WriteDouble(TardinessMean);
      }
      if (ShuffleBufferUtilizationMean != 0D) {
        output.WriteRawTag(57);
        output.WriteDouble(ShuffleBufferUtilizationMean);
      }
      if (SortedBufferUtilizationMean != 0D) {
        output.WriteRawTag(65);
        output.WriteDouble(SortedBufferUtilizationMean);
      }
      if (ShuffleCraneUtilizationMean != 0D) {
        output.WriteRawTag(73);
        output.WriteDouble(ShuffleCraneUtilizationMean);
      }
      if (HandoverCraneUtilizationMean != 0D) {
        output.WriteRawTag(81);
        output.WriteDouble(HandoverCraneUtilizationMean);
      }
      if (MillAUtilizationMean != 0D) {
        output.WriteRawTag(89);
        output.WriteDouble(MillAUtilizationMean);
      }
      if (MillBUtilizationMean != 0D) {
        output.WriteRawTag(97);
        output.WriteDouble(MillBUtilizationMean);
      }
      if (RollingProgramMessups != 0) {
        output.WriteRawTag(104);
        output.WriteInt32(RollingProgramMessups);
      }
      if (BlockedMillTime != 0D) {
        output.WriteRawTag(113);
        output.WriteDouble(BlockedMillTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CraneManipulations != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CraneManipulations);
      }
      if (ServiceLevelMean != 0D) {
        size += 1 + 8;
      }
      if (LeadTimeMean != 0D) {
        size += 1 + 8;
      }
      if (DeliveredBlocks != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(DeliveredBlocks);
      }
      if (TotalBlocksOnTime != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TotalBlocksOnTime);
      }
      if (TardinessMean != 0D) {
        size += 1 + 8;
      }
      if (ShuffleBufferUtilizationMean != 0D) {
        size += 1 + 8;
      }
      if (SortedBufferUtilizationMean != 0D) {
        size += 1 + 8;
      }
      if (ShuffleCraneUtilizationMean != 0D) {
        size += 1 + 8;
      }
      if (HandoverCraneUtilizationMean != 0D) {
        size += 1 + 8;
      }
      if (MillAUtilizationMean != 0D) {
        size += 1 + 8;
      }
      if (MillBUtilizationMean != 0D) {
        size += 1 + 8;
      }
      if (RollingProgramMessups != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RollingProgramMessups);
      }
      if (BlockedMillTime != 0D) {
        size += 1 + 8;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Performance other) {
      if (other == null) {
        return;
      }
      if (other.CraneManipulations != 0) {
        CraneManipulations = other.CraneManipulations;
      }
      if (other.ServiceLevelMean != 0D) {
        ServiceLevelMean = other.ServiceLevelMean;
      }
      if (other.LeadTimeMean != 0D) {
        LeadTimeMean = other.LeadTimeMean;
      }
      if (other.DeliveredBlocks != 0) {
        DeliveredBlocks = other.DeliveredBlocks;
      }
      if (other.TotalBlocksOnTime != 0) {
        TotalBlocksOnTime = other.TotalBlocksOnTime;
      }
      if (other.TardinessMean != 0D) {
        TardinessMean = other.TardinessMean;
      }
      if (other.ShuffleBufferUtilizationMean != 0D) {
        ShuffleBufferUtilizationMean = other.ShuffleBufferUtilizationMean;
      }
      if (other.SortedBufferUtilizationMean != 0D) {
        SortedBufferUtilizationMean = other.SortedBufferUtilizationMean;
      }
      if (other.ShuffleCraneUtilizationMean != 0D) {
        ShuffleCraneUtilizationMean = other.ShuffleCraneUtilizationMean;
      }
      if (other.HandoverCraneUtilizationMean != 0D) {
        HandoverCraneUtilizationMean = other.HandoverCraneUtilizationMean;
      }
      if (other.MillAUtilizationMean != 0D) {
        MillAUtilizationMean = other.MillAUtilizationMean;
      }
      if (other.MillBUtilizationMean != 0D) {
        MillBUtilizationMean = other.MillBUtilizationMean;
      }
      if (other.RollingProgramMessups != 0) {
        RollingProgramMessups = other.RollingProgramMessups;
      }
      if (other.BlockedMillTime != 0D) {
        BlockedMillTime = other.BlockedMillTime;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            CraneManipulations = input.ReadInt32();
            break;
          }
          case 17: {
            ServiceLevelMean = input.ReadDouble();
            break;
          }
          case 25: {
            LeadTimeMean = input.ReadDouble();
            break;
          }
          case 32: {
            DeliveredBlocks = input.ReadInt32();
            break;
          }
          case 40: {
            TotalBlocksOnTime = input.ReadInt32();
            break;
          }
          case 49: {
            TardinessMean = input.ReadDouble();
            break;
          }
          case 57: {
            ShuffleBufferUtilizationMean = input.ReadDouble();
            break;
          }
          case 65: {
            SortedBufferUtilizationMean = input.ReadDouble();
            break;
          }
          case 73: {
            ShuffleCraneUtilizationMean = input.ReadDouble();
            break;
          }
          case 81: {
            HandoverCraneUtilizationMean = input.ReadDouble();
            break;
          }
          case 89: {
            MillAUtilizationMean = input.ReadDouble();
            break;
          }
          case 97: {
            MillBUtilizationMean = input.ReadDouble();
            break;
          }
          case 104: {
            RollingProgramMessups = input.ReadInt32();
            break;
          }
          case 113: {
            BlockedMillTime = input.ReadDouble();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            CraneManipulations = input.ReadInt32();
            break;
          }
          case 17: {
            ServiceLevelMean = input.ReadDouble();
            break;
          }
          case 25: {
            LeadTimeMean = input.ReadDouble();
            break;
          }
          case 32: {
            DeliveredBlocks = input.ReadInt32();
            break;
          }
          case 40: {
            TotalBlocksOnTime = input.ReadInt32();
            break;
          }
          case 49: {
            TardinessMean = input.ReadDouble();
            break;
          }
          case 57: {
            ShuffleBufferUtilizationMean = input.ReadDouble();
            break;
          }
          case 65: {
            SortedBufferUtilizationMean = input.ReadDouble();
            break;
          }
          case 73: {
            ShuffleCraneUtilizationMean = input.ReadDouble();
            break;
          }
          case 81: {
            HandoverCraneUtilizationMean = input.ReadDouble();
            break;
          }
          case 89: {
            MillAUtilizationMean = input.ReadDouble();
            break;
          }
          case 97: {
            MillBUtilizationMean = input.ReadDouble();
            break;
          }
          case 104: {
            RollingProgramMessups = input.ReadInt32();
            break;
          }
          case 113: {
            BlockedMillTime = input.ReadDouble();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class PlannedCraneMoves : pb::IMessage<PlannedCraneMoves>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PlannedCraneMoves> _parser = new pb::MessageParser<PlannedCraneMoves>(() => new PlannedCraneMoves());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PlannedCraneMoves> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::DynStacking.RollingMill.DataModel.RollingmillModelReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlannedCraneMoves() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlannedCraneMoves(PlannedCraneMoves other) : this() {
      sequenceNr_ = other.sequenceNr_;
      moves_ = other.moves_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlannedCraneMoves Clone() {
      return new PlannedCraneMoves(this);
    }

    /// <summary>Field number for the "SequenceNr" field.</summary>
    public const int SequenceNrFieldNumber = 1;
    private int sequenceNr_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SequenceNr {
      get { return sequenceNr_; }
      set {
        sequenceNr_ = value;
      }
    }

    /// <summary>Field number for the "Moves" field.</summary>
    public const int MovesFieldNumber = 2;
    private static readonly pb::FieldCodec<global::DynStacking.RollingMill.DataModel.CraneMove> _repeated_moves_codec
        = pb::FieldCodec.ForMessage(18, global::DynStacking.RollingMill.DataModel.CraneMove.Parser);
    private readonly pbc::RepeatedField<global::DynStacking.RollingMill.DataModel.CraneMove> moves_ = new pbc::RepeatedField<global::DynStacking.RollingMill.DataModel.CraneMove>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::DynStacking.RollingMill.DataModel.CraneMove> Moves {
      get { return moves_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PlannedCraneMoves);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PlannedCraneMoves other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SequenceNr != other.SequenceNr) return false;
      if(!moves_.Equals(other.moves_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SequenceNr != 0) hash ^= SequenceNr.GetHashCode();
      hash ^= moves_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (SequenceNr != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(SequenceNr);
      }
      moves_.WriteTo(output, _repeated_moves_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (SequenceNr != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(SequenceNr);
      }
      moves_.WriteTo(ref output, _repeated_moves_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SequenceNr != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SequenceNr);
      }
      size += moves_.CalculateSize(_repeated_moves_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PlannedCraneMoves other) {
      if (other == null) {
        return;
      }
      if (other.SequenceNr != 0) {
        SequenceNr = other.SequenceNr;
      }
      moves_.Add(other.moves_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            SequenceNr = input.ReadInt32();
            break;
          }
          case 18: {
            moves_.AddEntriesFrom(input, _repeated_moves_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            SequenceNr = input.ReadInt32();
            break;
          }
          case 18: {
            moves_.AddEntriesFrom(ref input, _repeated_moves_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Stack : pb::IMessage<Stack>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Stack> _parser = new pb::MessageParser<Stack>(() => new Stack());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Stack> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::DynStacking.RollingMill.DataModel.RollingmillModelReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Stack() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Stack(Stack other) : this() {
      bottomToTop_ = other.bottomToTop_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Stack Clone() {
      return new Stack(this);
    }

    /// <summary>Field number for the "BottomToTop" field.</summary>
    public const int BottomToTopFieldNumber = 1;
    private static readonly pb::FieldCodec<global::DynStacking.RollingMill.DataModel.Block> _repeated_bottomToTop_codec
        = pb::FieldCodec.ForMessage(10, global::DynStacking.RollingMill.DataModel.Block.Parser);
    private readonly pbc::RepeatedField<global::DynStacking.RollingMill.DataModel.Block> bottomToTop_ = new pbc::RepeatedField<global::DynStacking.RollingMill.DataModel.Block>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::DynStacking.RollingMill.DataModel.Block> BottomToTop {
      get { return bottomToTop_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Stack);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Stack other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!bottomToTop_.Equals(other.bottomToTop_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= bottomToTop_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      bottomToTop_.WriteTo(output, _repeated_bottomToTop_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      bottomToTop_.WriteTo(ref output, _repeated_bottomToTop_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += bottomToTop_.CalculateSize(_repeated_bottomToTop_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Stack other) {
      if (other == null) {
        return;
      }
      bottomToTop_.Add(other.bottomToTop_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            bottomToTop_.AddEntriesFrom(input, _repeated_bottomToTop_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            bottomToTop_.AddEntriesFrom(ref input, _repeated_bottomToTop_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class TimeStamp : pb::IMessage<TimeStamp>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TimeStamp> _parser = new pb::MessageParser<TimeStamp>(() => new TimeStamp());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TimeStamp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::DynStacking.RollingMill.DataModel.RollingmillModelReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TimeStamp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TimeStamp(TimeStamp other) : this() {
      milliSeconds_ = other.milliSeconds_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TimeStamp Clone() {
      return new TimeStamp(this);
    }

    /// <summary>Field number for the "MilliSeconds" field.</summary>
    public const int MilliSecondsFieldNumber = 1;
    private long milliSeconds_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long MilliSeconds {
      get { return milliSeconds_; }
      set {
        milliSeconds_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TimeStamp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TimeStamp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MilliSeconds != other.MilliSeconds) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MilliSeconds != 0L) hash ^= MilliSeconds.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (MilliSeconds != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(MilliSeconds);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (MilliSeconds != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(MilliSeconds);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MilliSeconds != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(MilliSeconds);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TimeStamp other) {
      if (other == null) {
        return;
      }
      if (other.MilliSeconds != 0L) {
        MilliSeconds = other.MilliSeconds;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            MilliSeconds = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            MilliSeconds = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Uncertainties : pb::IMessage<Uncertainties>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Uncertainties> _parser = new pb::MessageParser<Uncertainties>(() => new Uncertainties());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Uncertainties> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::DynStacking.RollingMill.DataModel.RollingmillModelReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Uncertainties() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Uncertainties(Uncertainties other) : this() {
      arrivalIntervals_ = other.arrivalIntervals_.Clone();
      craneMoveTimes_ = other.craneMoveTimes_.Clone();
      millBlockIntervals_ = other.millBlockIntervals_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Uncertainties Clone() {
      return new Uncertainties(this);
    }

    /// <summary>Field number for the "ArrivalIntervals" field.</summary>
    public const int ArrivalIntervalsFieldNumber = 1;
    private static readonly pb::FieldCodec<double> _repeated_arrivalIntervals_codec
        = pb::FieldCodec.ForDouble(9);
    private readonly pbc::RepeatedField<double> arrivalIntervals_ = new pbc::RepeatedField<double>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<double> ArrivalIntervals {
      get { return arrivalIntervals_; }
    }

    /// <summary>Field number for the "CraneMoveTimes" field.</summary>
    public const int CraneMoveTimesFieldNumber = 2;
    private static readonly pb::FieldCodec<double> _repeated_craneMoveTimes_codec
        = pb::FieldCodec.ForDouble(17);
    private readonly pbc::RepeatedField<double> craneMoveTimes_ = new pbc::RepeatedField<double>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<double> CraneMoveTimes {
      get { return craneMoveTimes_; }
    }

    /// <summary>Field number for the "MillBlockIntervals" field.</summary>
    public const int MillBlockIntervalsFieldNumber = 3;
    private static readonly pb::FieldCodec<double> _repeated_millBlockIntervals_codec
        = pb::FieldCodec.ForDouble(25);
    private readonly pbc::RepeatedField<double> millBlockIntervals_ = new pbc::RepeatedField<double>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<double> MillBlockIntervals {
      get { return millBlockIntervals_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Uncertainties);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Uncertainties other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!arrivalIntervals_.Equals(other.arrivalIntervals_)) return false;
      if(!craneMoveTimes_.Equals(other.craneMoveTimes_)) return false;
      if(!millBlockIntervals_.Equals(other.millBlockIntervals_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= arrivalIntervals_.GetHashCode();
      hash ^= craneMoveTimes_.GetHashCode();
      hash ^= millBlockIntervals_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      arrivalIntervals_.WriteTo(output, _repeated_arrivalIntervals_codec);
      craneMoveTimes_.WriteTo(output, _repeated_craneMoveTimes_codec);
      millBlockIntervals_.WriteTo(output, _repeated_millBlockIntervals_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      arrivalIntervals_.WriteTo(ref output, _repeated_arrivalIntervals_codec);
      craneMoveTimes_.WriteTo(ref output, _repeated_craneMoveTimes_codec);
      millBlockIntervals_.WriteTo(ref output, _repeated_millBlockIntervals_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += arrivalIntervals_.CalculateSize(_repeated_arrivalIntervals_codec);
      size += craneMoveTimes_.CalculateSize(_repeated_craneMoveTimes_codec);
      size += millBlockIntervals_.CalculateSize(_repeated_millBlockIntervals_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Uncertainties other) {
      if (other == null) {
        return;
      }
      arrivalIntervals_.Add(other.arrivalIntervals_);
      craneMoveTimes_.Add(other.craneMoveTimes_);
      millBlockIntervals_.Add(other.millBlockIntervals_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 9: {
            arrivalIntervals_.AddEntriesFrom(input, _repeated_arrivalIntervals_codec);
            break;
          }
          case 18:
          case 17: {
            craneMoveTimes_.AddEntriesFrom(input, _repeated_craneMoveTimes_codec);
            break;
          }
          case 26:
          case 25: {
            millBlockIntervals_.AddEntriesFrom(input, _repeated_millBlockIntervals_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10:
          case 9: {
            arrivalIntervals_.AddEntriesFrom(ref input, _repeated_arrivalIntervals_codec);
            break;
          }
          case 18:
          case 17: {
            craneMoveTimes_.AddEntriesFrom(ref input, _repeated_craneMoveTimes_codec);
            break;
          }
          case 26:
          case 25: {
            millBlockIntervals_.AddEntriesFrom(ref input, _repeated_millBlockIntervals_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class World : pb::IMessage<World>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<World> _parser = new pb::MessageParser<World>(() => new World());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<World> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::DynStacking.RollingMill.DataModel.RollingmillModelReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public World() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public World(World other) : this() {
      now_ = other.now_ != null ? other.now_.Clone() : null;
      height_ = other.height_;
      width_ = other.width_;
      locations_ = other.locations_.Clone();
      blocksAtSlabYard_ = other.blocksAtSlabYard_.Clone();
      arrivalsFromSlabYard_ = other.arrivalsFromSlabYard_.Clone();
      craneMoves_ = other.craneMoves_ != null ? other.craneMoves_.Clone() : null;
      moveRequests_ = other.moveRequests_.Clone();
      craneSchedule_ = other.craneSchedule_ != null ? other.craneSchedule_.Clone() : null;
      shuffleCrane_ = other.shuffleCrane_ != null ? other.shuffleCrane_.Clone() : null;
      handoverCrane_ = other.handoverCrane_ != null ? other.handoverCrane_.Clone() : null;
      kPIs_ = other.kPIs_ != null ? other.kPIs_.Clone() : null;
      observationData_ = other.observationData_ != null ? other.observationData_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public World Clone() {
      return new World(this);
    }

    /// <summary>Field number for the "Now" field.</summary>
    public const int NowFieldNumber = 1;
    private global::DynStacking.RollingMill.DataModel.TimeStamp now_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::DynStacking.RollingMill.DataModel.TimeStamp Now {
      get { return now_; }
      set {
        now_ = value;
      }
    }

    /// <summary>Field number for the "Height" field.</summary>
    public const int HeightFieldNumber = 2;
    private int height_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Height {
      get { return height_; }
      set {
        height_ = value;
      }
    }

    /// <summary>Field number for the "Width" field.</summary>
    public const int WidthFieldNumber = 3;
    private double width_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Width {
      get { return width_; }
      set {
        width_ = value;
      }
    }

    /// <summary>Field number for the "Locations" field.</summary>
    public const int LocationsFieldNumber = 4;
    private static readonly pb::FieldCodec<global::DynStacking.RollingMill.DataModel.Location> _repeated_locations_codec
        = pb::FieldCodec.ForMessage(34, global::DynStacking.RollingMill.DataModel.Location.Parser);
    private readonly pbc::RepeatedField<global::DynStacking.RollingMill.DataModel.Location> locations_ = new pbc::RepeatedField<global::DynStacking.RollingMill.DataModel.Location>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::DynStacking.RollingMill.DataModel.Location> Locations {
      get { return locations_; }
    }

    /// <summary>Field number for the "BlocksAtSlabYard" field.</summary>
    public const int BlocksAtSlabYardFieldNumber = 5;
    private static readonly pb::FieldCodec<global::DynStacking.RollingMill.DataModel.Block> _repeated_blocksAtSlabYard_codec
        = pb::FieldCodec.ForMessage(42, global::DynStacking.RollingMill.DataModel.Block.Parser);
    private readonly pbc::RepeatedField<global::DynStacking.RollingMill.DataModel.Block> blocksAtSlabYard_ = new pbc::RepeatedField<global::DynStacking.RollingMill.DataModel.Block>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::DynStacking.RollingMill.DataModel.Block> BlocksAtSlabYard {
      get { return blocksAtSlabYard_; }
    }

    /// <summary>Field number for the "ArrivalsFromSlabYard" field.</summary>
    public const int ArrivalsFromSlabYardFieldNumber = 6;
    private static readonly pb::FieldCodec<global::DynStacking.RollingMill.DataModel.Arrival> _repeated_arrivalsFromSlabYard_codec
        = pb::FieldCodec.ForMessage(50, global::DynStacking.RollingMill.DataModel.Arrival.Parser);
    private readonly pbc::RepeatedField<global::DynStacking.RollingMill.DataModel.Arrival> arrivalsFromSlabYard_ = new pbc::RepeatedField<global::DynStacking.RollingMill.DataModel.Arrival>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::DynStacking.RollingMill.DataModel.Arrival> ArrivalsFromSlabYard {
      get { return arrivalsFromSlabYard_; }
    }

    /// <summary>Field number for the "CraneMoves" field.</summary>
    public const int CraneMovesFieldNumber = 7;
    private global::DynStacking.RollingMill.DataModel.PlannedCraneMoves craneMoves_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::DynStacking.RollingMill.DataModel.PlannedCraneMoves CraneMoves {
      get { return craneMoves_; }
      set {
        craneMoves_ = value;
      }
    }

    /// <summary>Field number for the "MoveRequests" field.</summary>
    public const int MoveRequestsFieldNumber = 8;
    private static readonly pb::FieldCodec<global::DynStacking.RollingMill.DataModel.MoveRequest> _repeated_moveRequests_codec
        = pb::FieldCodec.ForMessage(66, global::DynStacking.RollingMill.DataModel.MoveRequest.Parser);
    private readonly pbc::RepeatedField<global::DynStacking.RollingMill.DataModel.MoveRequest> moveRequests_ = new pbc::RepeatedField<global::DynStacking.RollingMill.DataModel.MoveRequest>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::DynStacking.RollingMill.DataModel.MoveRequest> MoveRequests {
      get { return moveRequests_; }
    }

    /// <summary>Field number for the "CraneSchedule" field.</summary>
    public const int CraneScheduleFieldNumber = 9;
    private global::DynStacking.RollingMill.DataModel.CraneSchedule craneSchedule_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::DynStacking.RollingMill.DataModel.CraneSchedule CraneSchedule {
      get { return craneSchedule_; }
      set {
        craneSchedule_ = value;
      }
    }

    /// <summary>Field number for the "ShuffleCrane" field.</summary>
    public const int ShuffleCraneFieldNumber = 10;
    private global::DynStacking.RollingMill.DataModel.Crane shuffleCrane_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::DynStacking.RollingMill.DataModel.Crane ShuffleCrane {
      get { return shuffleCrane_; }
      set {
        shuffleCrane_ = value;
      }
    }

    /// <summary>Field number for the "HandoverCrane" field.</summary>
    public const int HandoverCraneFieldNumber = 11;
    private global::DynStacking.RollingMill.DataModel.Crane handoverCrane_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::DynStacking.RollingMill.DataModel.Crane HandoverCrane {
      get { return handoverCrane_; }
      set {
        handoverCrane_ = value;
      }
    }

    /// <summary>Field number for the "KPIs" field.</summary>
    public const int KPIsFieldNumber = 12;
    private global::DynStacking.RollingMill.DataModel.Performance kPIs_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::DynStacking.RollingMill.DataModel.Performance KPIs {
      get { return kPIs_; }
      set {
        kPIs_ = value;
      }
    }

    /// <summary>Field number for the "ObservationData" field.</summary>
    public const int ObservationDataFieldNumber = 13;
    private global::DynStacking.RollingMill.DataModel.Uncertainties observationData_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::DynStacking.RollingMill.DataModel.Uncertainties ObservationData {
      get { return observationData_; }
      set {
        observationData_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as World);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(World other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Now, other.Now)) return false;
      if (Height != other.Height) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Width, other.Width)) return false;
      if(!locations_.Equals(other.locations_)) return false;
      if(!blocksAtSlabYard_.Equals(other.blocksAtSlabYard_)) return false;
      if(!arrivalsFromSlabYard_.Equals(other.arrivalsFromSlabYard_)) return false;
      if (!object.Equals(CraneMoves, other.CraneMoves)) return false;
      if(!moveRequests_.Equals(other.moveRequests_)) return false;
      if (!object.Equals(CraneSchedule, other.CraneSchedule)) return false;
      if (!object.Equals(ShuffleCrane, other.ShuffleCrane)) return false;
      if (!object.Equals(HandoverCrane, other.HandoverCrane)) return false;
      if (!object.Equals(KPIs, other.KPIs)) return false;
      if (!object.Equals(ObservationData, other.ObservationData)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (now_ != null) hash ^= Now.GetHashCode();
      if (Height != 0) hash ^= Height.GetHashCode();
      if (Width != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Width);
      hash ^= locations_.GetHashCode();
      hash ^= blocksAtSlabYard_.GetHashCode();
      hash ^= arrivalsFromSlabYard_.GetHashCode();
      if (craneMoves_ != null) hash ^= CraneMoves.GetHashCode();
      hash ^= moveRequests_.GetHashCode();
      if (craneSchedule_ != null) hash ^= CraneSchedule.GetHashCode();
      if (shuffleCrane_ != null) hash ^= ShuffleCrane.GetHashCode();
      if (handoverCrane_ != null) hash ^= HandoverCrane.GetHashCode();
      if (kPIs_ != null) hash ^= KPIs.GetHashCode();
      if (observationData_ != null) hash ^= ObservationData.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (now_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Now);
      }
      if (Height != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Height);
      }
      if (Width != 0D) {
        output.WriteRawTag(25);
        output.WriteDouble(Width);
      }
      locations_.WriteTo(output, _repeated_locations_codec);
      blocksAtSlabYard_.WriteTo(output, _repeated_blocksAtSlabYard_codec);
      arrivalsFromSlabYard_.WriteTo(output, _repeated_arrivalsFromSlabYard_codec);
      if (craneMoves_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(CraneMoves);
      }
      moveRequests_.WriteTo(output, _repeated_moveRequests_codec);
      if (craneSchedule_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(CraneSchedule);
      }
      if (shuffleCrane_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(ShuffleCrane);
      }
      if (handoverCrane_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(HandoverCrane);
      }
      if (kPIs_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(KPIs);
      }
      if (observationData_ != null) {
        output.WriteRawTag(106);
        output.WriteMessage(ObservationData);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (now_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Now);
      }
      if (Height != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Height);
      }
      if (Width != 0D) {
        output.WriteRawTag(25);
        output.WriteDouble(Width);
      }
      locations_.WriteTo(ref output, _repeated_locations_codec);
      blocksAtSlabYard_.WriteTo(ref output, _repeated_blocksAtSlabYard_codec);
      arrivalsFromSlabYard_.WriteTo(ref output, _repeated_arrivalsFromSlabYard_codec);
      if (craneMoves_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(CraneMoves);
      }
      moveRequests_.WriteTo(ref output, _repeated_moveRequests_codec);
      if (craneSchedule_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(CraneSchedule);
      }
      if (shuffleCrane_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(ShuffleCrane);
      }
      if (handoverCrane_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(HandoverCrane);
      }
      if (kPIs_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(KPIs);
      }
      if (observationData_ != null) {
        output.WriteRawTag(106);
        output.WriteMessage(ObservationData);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (now_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Now);
      }
      if (Height != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Height);
      }
      if (Width != 0D) {
        size += 1 + 8;
      }
      size += locations_.CalculateSize(_repeated_locations_codec);
      size += blocksAtSlabYard_.CalculateSize(_repeated_blocksAtSlabYard_codec);
      size += arrivalsFromSlabYard_.CalculateSize(_repeated_arrivalsFromSlabYard_codec);
      if (craneMoves_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CraneMoves);
      }
      size += moveRequests_.CalculateSize(_repeated_moveRequests_codec);
      if (craneSchedule_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CraneSchedule);
      }
      if (shuffleCrane_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ShuffleCrane);
      }
      if (handoverCrane_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(HandoverCrane);
      }
      if (kPIs_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(KPIs);
      }
      if (observationData_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ObservationData);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(World other) {
      if (other == null) {
        return;
      }
      if (other.now_ != null) {
        if (now_ == null) {
          Now = new global::DynStacking.RollingMill.DataModel.TimeStamp();
        }
        Now.MergeFrom(other.Now);
      }
      if (other.Height != 0) {
        Height = other.Height;
      }
      if (other.Width != 0D) {
        Width = other.Width;
      }
      locations_.Add(other.locations_);
      blocksAtSlabYard_.Add(other.blocksAtSlabYard_);
      arrivalsFromSlabYard_.Add(other.arrivalsFromSlabYard_);
      if (other.craneMoves_ != null) {
        if (craneMoves_ == null) {
          CraneMoves = new global::DynStacking.RollingMill.DataModel.PlannedCraneMoves();
        }
        CraneMoves.MergeFrom(other.CraneMoves);
      }
      moveRequests_.Add(other.moveRequests_);
      if (other.craneSchedule_ != null) {
        if (craneSchedule_ == null) {
          CraneSchedule = new global::DynStacking.RollingMill.DataModel.CraneSchedule();
        }
        CraneSchedule.MergeFrom(other.CraneSchedule);
      }
      if (other.shuffleCrane_ != null) {
        if (shuffleCrane_ == null) {
          ShuffleCrane = new global::DynStacking.RollingMill.DataModel.Crane();
        }
        ShuffleCrane.MergeFrom(other.ShuffleCrane);
      }
      if (other.handoverCrane_ != null) {
        if (handoverCrane_ == null) {
          HandoverCrane = new global::DynStacking.RollingMill.DataModel.Crane();
        }
        HandoverCrane.MergeFrom(other.HandoverCrane);
      }
      if (other.kPIs_ != null) {
        if (kPIs_ == null) {
          KPIs = new global::DynStacking.RollingMill.DataModel.Performance();
        }
        KPIs.MergeFrom(other.KPIs);
      }
      if (other.observationData_ != null) {
        if (observationData_ == null) {
          ObservationData = new global::DynStacking.RollingMill.DataModel.Uncertainties();
        }
        ObservationData.MergeFrom(other.ObservationData);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (now_ == null) {
              Now = new global::DynStacking.RollingMill.DataModel.TimeStamp();
            }
            input.ReadMessage(Now);
            break;
          }
          case 16: {
            Height = input.ReadInt32();
            break;
          }
          case 25: {
            Width = input.ReadDouble();
            break;
          }
          case 34: {
            locations_.AddEntriesFrom(input, _repeated_locations_codec);
            break;
          }
          case 42: {
            blocksAtSlabYard_.AddEntriesFrom(input, _repeated_blocksAtSlabYard_codec);
            break;
          }
          case 50: {
            arrivalsFromSlabYard_.AddEntriesFrom(input, _repeated_arrivalsFromSlabYard_codec);
            break;
          }
          case 58: {
            if (craneMoves_ == null) {
              CraneMoves = new global::DynStacking.RollingMill.DataModel.PlannedCraneMoves();
            }
            input.ReadMessage(CraneMoves);
            break;
          }
          case 66: {
            moveRequests_.AddEntriesFrom(input, _repeated_moveRequests_codec);
            break;
          }
          case 74: {
            if (craneSchedule_ == null) {
              CraneSchedule = new global::DynStacking.RollingMill.DataModel.CraneSchedule();
            }
            input.ReadMessage(CraneSchedule);
            break;
          }
          case 82: {
            if (shuffleCrane_ == null) {
              ShuffleCrane = new global::DynStacking.RollingMill.DataModel.Crane();
            }
            input.ReadMessage(ShuffleCrane);
            break;
          }
          case 90: {
            if (handoverCrane_ == null) {
              HandoverCrane = new global::DynStacking.RollingMill.DataModel.Crane();
            }
            input.ReadMessage(HandoverCrane);
            break;
          }
          case 98: {
            if (kPIs_ == null) {
              KPIs = new global::DynStacking.RollingMill.DataModel.Performance();
            }
            input.ReadMessage(KPIs);
            break;
          }
          case 106: {
            if (observationData_ == null) {
              ObservationData = new global::DynStacking.RollingMill.DataModel.Uncertainties();
            }
            input.ReadMessage(ObservationData);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (now_ == null) {
              Now = new global::DynStacking.RollingMill.DataModel.TimeStamp();
            }
            input.ReadMessage(Now);
            break;
          }
          case 16: {
            Height = input.ReadInt32();
            break;
          }
          case 25: {
            Width = input.ReadDouble();
            break;
          }
          case 34: {
            locations_.AddEntriesFrom(ref input, _repeated_locations_codec);
            break;
          }
          case 42: {
            blocksAtSlabYard_.AddEntriesFrom(ref input, _repeated_blocksAtSlabYard_codec);
            break;
          }
          case 50: {
            arrivalsFromSlabYard_.AddEntriesFrom(ref input, _repeated_arrivalsFromSlabYard_codec);
            break;
          }
          case 58: {
            if (craneMoves_ == null) {
              CraneMoves = new global::DynStacking.RollingMill.DataModel.PlannedCraneMoves();
            }
            input.ReadMessage(CraneMoves);
            break;
          }
          case 66: {
            moveRequests_.AddEntriesFrom(ref input, _repeated_moveRequests_codec);
            break;
          }
          case 74: {
            if (craneSchedule_ == null) {
              CraneSchedule = new global::DynStacking.RollingMill.DataModel.CraneSchedule();
            }
            input.ReadMessage(CraneSchedule);
            break;
          }
          case 82: {
            if (shuffleCrane_ == null) {
              ShuffleCrane = new global::DynStacking.RollingMill.DataModel.Crane();
            }
            input.ReadMessage(ShuffleCrane);
            break;
          }
          case 90: {
            if (handoverCrane_ == null) {
              HandoverCrane = new global::DynStacking.RollingMill.DataModel.Crane();
            }
            input.ReadMessage(HandoverCrane);
            break;
          }
          case 98: {
            if (kPIs_ == null) {
              KPIs = new global::DynStacking.RollingMill.DataModel.Performance();
            }
            input.ReadMessage(KPIs);
            break;
          }
          case 106: {
            if (observationData_ == null) {
              ObservationData = new global::DynStacking.RollingMill.DataModel.Uncertainties();
            }
            input.ReadMessage(ObservationData);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
